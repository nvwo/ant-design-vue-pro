(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d216214"],{c0c4:function(n,e){n.exports="# 路由和菜单\n\n路由和菜单是组织起一个应用的关键骨架，pro 中的路由为了方便管理，使用了**中心化**的方式，在 [`router.config.js`](https://github.com/vueComponent/ant-design-vue-pro/blob/refactor/pro-v3/src/config/router.config.js) 统一配置和管理（另外，我们也提供了完全动态从后端加载的解决方案，可至本文末尾查看）。\n\n## 基本结构\n\n在这一部分，脚手架通过结合一些配置文件、基本算法及工具函数，搭建好了路由和菜单的基本框架，主要涉及以下几个模块/功能：\n\n- `路由管理` 通过约定的语法根据在 [`router.config.js`](https://github.com/vueComponent/ant-design-vue-pro/blob/refactor/pro-v3/src/config/router.config.js) 中配置路由。\n- `菜单生成` 根据路由配置来生成菜单。菜单项名称，嵌套路径与路由高度耦合。\n- `面包屑` 组件 [PageHeaderWrapper](https://github.com/vueComponent/pro-layout/blob/master/src/components/PageHeaderWrapper/index.jsx) 中内置的面包屑也可由脚手架提供的配置信息自动生成。\n\n下面简单介绍下各个模块的基本思路，如果你对实现过程不感兴趣，只想了解应该怎么实现相关需求，可以直接查看[需求实例](/docs/router-and-nav#需求实例)。\n\n### 路由\n\n目前脚手架中所有的路由都通过 [`router.config.js`](https://github.com/vueComponent/ant-design-vue-pro/blob/refactor/pro-v3/src/config/router.config.js) 来统一管理，在 `vue-router` 的配置中我们增加了一些参数，如 `hideChildrenInMenu`,`meta.title`,`meta.icon`,`meta.permission`，来辅助生成菜单。其中：\n\n- `hideChildrenInMenu` 用于隐藏不需要在菜单中展示的子路由。(需要搭配子路由的 meta `hidden: true` 生效) 用法可以查看 `个人设置`路由的配置。\n- `meta.title` 和 `meta.icon`分别代表生成菜单项的文本和图标。\n- `meta.permission` 用来配置这个路由的权限，如果配置了将会验证当前用户的权限，并决定是否展示 *（默认情况下）。\n- `meta.hidden` 用于在菜单栏中隐藏当前菜单，并且为上级菜单提供高亮支持\n\n### 菜单\n\n菜单根据 [`router.config.js`](https://github.com/vueComponent/ant-design-vue-pro/blob/refactor/pro-v3/src/config/router.config.js) 生成，具体逻辑在 `src/store/modules/permission.js` 中的 `actions.GenerateRoutes` 方法实现。\n\n> 如果你需要从服务器请求菜单，你可以参考 [权限管理&动态菜单](/docs/authority-management)\n\n## 需求实例\n\n上面对这部分的实现概要进行了介绍，接下来通过实际的案例来说明具体该怎么做。\n\n### 菜单跳转到外部地址\n\n你可以直接将完整 url 填入 path 中，框架会自动处理。\n\n```js\n{\n    path: 'https://pro.loacg.com/docs/getting-started',\n    name: 'docs',\n    meta: {\n        title: '文档', \n        target: '_blank' // 打开到新窗口\n   }\n}\n```\n加好后，会默认生成相关的路由及导航。\n\n### 新增布局\n\n在脚手架中我们通过嵌套路由来实现布局模板。[`router.config.js`](https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/router.config.js) 是一个数组，其中第一级数据就是我们的布局，如果你需要新增布局可以再直接增加一个新的一级数据。\n\n```js\n{\n    path: '/new-router',\n    name: 'newRouter',\n    redirect: '/new-router/ahaha',\n    component: RouteView,\n    meta: { title: '仪表盘', keepAlive: true, permission: [ 'dashboard' ] },\n    children: [\n    {\n        path: '/new-router/ahaha',\n        name: 'ahaha',\n        component: () => import('@/views/dashboard/Analysis'),\n        meta: { title: '分析页', keepAlive: false, permission: [ 'ahaha' ] }\n    }\n}\n```\n\n路由配置项 e.g.\n```js\n{\n  redirect: noredirect,\n  name: 'router-name',\n  hidden: true,\n  meta: {\n    title: 'title',\n    icon: 'a-icon',\n    keepAlive: true,\n    hiddenHeaderContent: true,\n  }\n}\n```\n\n\n### API\n\n`{ Route }` 对象\n\n| 参数               | 说明                                              | 类型    | 默认值 |\n| ------------------ | ------------------------------------------------- | ------- | ------ |\n| hidden             | 控制路由和子路由是否显示在 sidebar                | boolean | false  |\n| redirect           | 重定向地址, 访问这个路由时,自定进行重定向         | string  | -      |\n| name               | 路由名称, 必须设置,且不能重名                     | string  | -      |\n| meta               | 路由元信息（路由附带扩展信息）                    | object  | {}     |\n| hideChildrenInMenu | 强制菜单显示为Item而不是SubItem(配合 meta.hidden) | boolean | -      |\n\n`{ Meta }` 路由元信息对象\n\n| 参数                | 说明                                                         | 类型         | 默认值 |\n| ------------------- | ------------------------------------------------------------ | ------------ | ------ |\n| title               | 路由标题, 用于显示面包屑, 页面标题 *推荐设置                 | string       | -      |\n| icon                | 路由在 menu 上显示的图标                                     | [string,svg] | -      |\n| keepAlive           | 缓存该路由 (开启 multi-tab 是默认值为 true)                  | boolean      | false  |\n| hiddenHeaderContent | *特殊 隐藏 [PageHeader](https://github.com/sendya/ant-design-pro-vue/blob/master/src/components/layout/PageHeader.vue#L14) 组件中的页面带的 面包屑和页面标题栏 | boolean      | false  |\n| permission          | 与项目提供的权限拦截匹配的权限，如果不匹配，则会被禁止访问该路由页面 | array        | []     |\n\n> 路由自定义 `Icon` 请引入自定义 `svg` Icon 文件，然后传递给路由的 `meta.icon` 参数即可\n\n> 请注意 `component: () => import('..') ` 方式引入路由的页面组件为 懒加载模式。具体可以看 [Vue 官方文档](https://router.vuejs.org/zh/guide/advanced/lazy-loading.html)  \n> 增加新的路由应该增加在 '/' (index) 路由的 `children` 内  \n> 无需控制权限的路由或者需要在未登录情况访问的路由，可以定义在 `/src/config/router.config.js` 下的 `constantRouterMap` 属性中\n> `permission` 可以进行自定义修改，只需要对这个模块进行自定义修改即可 [src/store/modules/permission.js#L10](https://github.com/sendya/ant-design-pro-vue/blob/master/src/store/modules/permission.js#L10)\n\n\n### 附录\n> 如果你需要从服务器请求菜单，你可以参考 [权限管理&动态菜单](/docs/authority-management)\n"}}]);