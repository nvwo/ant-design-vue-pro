(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d230695"],{ebbd:function(e,n){e.exports="# Build & Deployment\n\n\n\n## Build\n\nWhen you finish the development, you can run the following command to build your application:\n\n```bash\n$ yarn build\nor\n$ npm run build\n```\n\nAnt Design Pro use the tool `vue-cli` to encapsulate the complex process. Only one command `yarn build` or `npm run build` is needed to build the package file. After the build is packaged successfully, the `dist` folder will be generated in the root directory. Inside are the built and packaged files, which are usually static files such as `*.js`, `*.css`, and `index.html`, as well as all files under the `public/` of the project root.\n\nBut if you want to custom the build result, like specify the result directory, you can configure it in `/vue.config.js` , refer to [vue-cli configuration](https://cli.vuejs.org/guide/) or more details.\n\n### Routing and server integration\n\nAnt Design Pro use `Vue-Router` has two modes of route：`browserHistory` and `hashHistory` You can check [Vue-Router mode](https://router.vuejs.org/zh/guide/essentials/history-mode.html)  \n\nConfig it at `src/router/index.js` file.\n```javascript\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport { constantRouterMap } from '@/config/router.config'\n\nVue.use(Router)\n\nexport default new Router({\n  mode: 'history', // history | hash\n  base: process.env.BASE_URL,\n  scrollBehavior: () => ({ y: 0 }),\n  routes: constantRouterMap\n})\n```\n\n`hashHistory` uses a URL such as `https://cdn.com/#/users/123` and take the path following the `#` as the application route. `browserHistory` uses `https://cdn.com/users/123` directly. When using `hashHistory` he browser always requests `index.html` under the root directory. Using `browserHistory` requires that the server be prepared to handle URLs. It should be OK to handle the initial `/` . However, when the user jumps back and forth and refreshes `/users/123` , the server receives a `/users/123` request, then you need to configure the server to handle this URL to return the correct `index.html`. If you can control the server, we recommend using `browserHistory`.\n\n## Deploy to different platforms\n\n### use nginx\n\nAs one of the most popular web containers, nginx is simple to configure and use, with high performance and high availability with a simple configuration. It is recommended to use nginx hosting. The sample configuration is as follows:\n```nginx\nserver {\n    listen 80;\n    # gzip config\n    gzip on;\n    gzip_min_length 1k;\n    gzip_comp_level 9;\n    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;\n    gzip_vary on;\n    gzip_disable \"MSIE [1-6]\\.\";\n\n    root /usr/share/nginx/html;\n\n    location / {\n        # 用于配合 browserHistory 使用\n        try_files $uri $uri/ /index.html;\n\n        # 如果有资源，建议使用 https + http2，配合按需加载可以获得更好的体验 \n        # rewrite ^/(.*)$ https://preview.pro.antdv.com/$1 permanent;\n\n    }\n    location /api {\n        proxy_pass https://preview.pro.antdv.com;\n        proxy_set_header   X-Forwarded-Proto $scheme;\n        proxy_set_header   Host              $http_host;\n        proxy_set_header   X-Real-IP         $remote_addr;\n    }\n}\nserver {\n  # 如果有资源，建议使用 https + http2，配合按需加载可以获得更好的体验 \n  listen 443 ssl http2 default_server;\n\n  # 证书的公私钥\n  ssl_certificate /path/to/public.crt;\n  ssl_certificate_key /path/to/private.key;\n\n  location / {\n        # 用于配合 browserHistory 使用\n        try_files $uri $uri/ /index.html;\n\n  }\n  location /api {\n      proxy_pass https://preview.pro.loacg.com;\n      proxy_set_header   X-Forwarded-Proto $scheme;\n      proxy_set_header   Host              $http_host;\n      proxy_set_header   X-Real-IP         $remote_addr;\n  }\n}\n```\n\n### use Spring Boot\n\nSpring Boot is the most used java framework, and it can be integrated with `Ant Design Pro` in just a few simple steps.\n\nfirst run build script\n```bash\n$ yarn build\nor\n$ npm run build\n```\n\nThen copy the compiled file to the /src/main/resources/static directory of the Spring Boot project.\nRestart project, You can see the effect by visiting `http://localhost:8080/` 。\n\nFor ease of integration, it is best to use hash routing. If you want to use browserHistory, you create a controller and add the following code:\n```java\n@RequestMapping(\"/api/**\")\npublic ApiResult api(HttpServletRequest request, HttpServletResponse response){\n    return apiProxy.proxy(request, reponse);\n}\n\n@RequestMapping(value=\"/**\", method=HTTPMethod.GET)\npublic String index(){\n    return \"index\"\n}\n```\n\n> Note that Ant Design Pro does not provide a java api interface implementation, if you just want to preview the demo, you can use a reverse proxy to `https://preview.pro.antdv.com`。\n\n### use express\n\n[express](http://expressjs.com/) demo:\n```\napp.use(express.static(path.join(__dirname, 'build')));\n\napp.get('/*', function (req, res) {\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\n});\n```\n\n### use egg\n\n[egg](https://eggjs.org/) demo\n```\n// controller\nexports.index = function* () {\n  yield this.render('App.jsx', {\n    context: {\n      user: this.session.user,\n    },\n  });\n};\n\n// router\napp.get('home', '/*', 'home.index');\n```\n\nYou can refer to [Vue-Router](https://router.vuejs.org/zh/) for more router information.\n"}}]);