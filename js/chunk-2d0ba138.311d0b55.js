(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ba138"],{3654:function(e,n){e.exports="# Router and Nav\n\nRouting and menus are the key skeletons for organizing an application. The routes in pro are **centrally managed** in a convenient way to manage and manage them in [`router.config.js`](https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/router.config.js). (In addition, we also provide a solution to dynamically loading from backend , which can be viewed at the end of this article.)\n\n## Basic Structure\n\nIn this part, scaffolding builds the basic framework of routing and menus by combining some configuration files, basic algorithms and tool functions, mainly involving the following modules/functions:\n\n- `Routing Management` Configure the route in [`router.config.js`](https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/router.config.js) according to the agreed syntax.\n- `Menu generation` Generates a menu based on the routing configuration. The name of the menu item, the nested path is highly coupled to the route.\n- `Breadcrumbs component` The breadcrumbs built into [PageHeader](http://pro.loacg.com/components/page-header) can also be automatically generated from the configuration information provided by the scaffolding.\n\nThe following is a brief introduction to the basic ideas of each module. If you are not interested in the implementation process, just want to know how to implement the relevant requirements, you can directly view [Examples](/docs/router-and-nav#Examples).\n\n### Router\n\nAt present, all the routes in the scaffolding are managed by [`router.config.js`](https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/router.config.js). In the configuration of `vue-router`, we add some parameters, such as `hideChildrenInMenu`, `meta.title`, `meta.icon`, `meta.permission` to assist the generation of menu, among them:\n- `hideChildrenInMenu` is used to hide sub-routes that you don't want to show. You can refer to the configuration of `Account Settings` for its usage.\n- `hidden` can hide the route in menu, including sub-routesã€‚You can check out the configuration of `other` for its effect.\n- `meta.title` and `meta.icon` are title and icon of the menu.\n- `meta.permission` is used to configure the permissions of the route.If this configuration is set, the user's permissions will be verified to determine whether to show the route (By default).\n- `meta.hiddenHeaderContent` forces the current page to hide the breadcrumb and page-title in [PageHeader](https://github.com/sendya/ant-design-pro-vue/tree/master/src/components/PageHeader/PageHeader.vue#L6).\n\n### Menu\n\nThe menu is generated by [`router.config.js`](https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/router.config.js). This is implemented by `actions.GenerateRoutes` in `src/store/modules/permission.js`.\n\n> If you want to request menu from server, you can check out [Authority management&Dynamic menu](/docs/authority-management)\n\n## Examples\n\nThe above outlines the implementation of this part, and then through the actual case to explain what to do.\n\n### Jump to URL from menu\n\nYou can fill in an URL in the path, the framework will handle it automatically.\n\n```js\n{\n    path: 'https://pro.loacg.com/docs/getting-started',\n    name: 'docs',\n    meta: {\n        title: 'documents', \n        target: '_blank' // open a new tab\n   }\n}\n```\nAfter this, related routing and navigation will be generated by default.\n\n### Add layout\n\nIn the scaffolding, we implement layout templates by the nested routes. The [`router.config.js`](https://github.com/sendya/ant-design-pro-vue/blob/master/src/config/router.config.js) is an array, where the first level of data is our layout, if you need to add a new layout, you can directly add a new level of data.\n\n```js\n{\n    path: '/new-router',\n    name: 'newRouter',\n    redirect: '/new-router/ahaha',\n    component: RouteView,\n    meta: { title: 'Gauge', keepAlive: true, permission: [ 'dashboard' ] },\n    children: [\n    {\n        path: '/new-router/ahaha',\n        name: 'ahaha',\n        component: () => import('@/views/dashboard/Analysis'),\n        meta: { title: 'Analysis', keepAlive: false, permission: [ 'ahaha' ] }\n    }\n}\n\n```\nRouting configuration item, e.g:\n```js\n{\n  redirect: noredirect,\n  name: 'router-name',\n  hidden: true,\n  meta: {\n    title: 'title',\n    icon: 'a-icon',\n    keepAlive: true,\n    hiddenHeaderContent: true,\n  }\n}\n```\n\n### API\n\n`{ Route }`\n\n| Parameter          | Description                                                                        | Data Type | Default Value |\n| ------------------ | ---------------------------------------------------------------------------------- | --------- | ------------- |\n| hidden             | This controls whether routes and subroutines are displayed in sidebar.             |  boolean  |     false     |\n| redirect           | Redirect address. When this route is accessed, the redirect is automatically made. |  string   |       -       |\n| name               | The name of route. Must be set and unique.                                         |  string   |       -       |\n| meta               | The metadata of route.(The route also comes with extended information)             |  object   |       {}      |\n| hideChildrenInMenu | This forces menu to be displayed as Item instead of SubItem (with meta.hidden)     |  boolean  |       -       |\n\n`{ Meta }`\n\n| Parameter           | Description                                                                        | Data Type | Default Value |\n| ------------------- | ---------------------------------------------------------------------------------- | --------- | ------------- |\n| title               | The title of route, used to display breadcrumbs and page titles. (It is recommended to set it up.) | string | - |\n| icon                | The icon of route, displayed on menu.                                              |[string,svg]|      -       |\n| keepAlive           | Cache the route. (When multi-tab is on, the dafault value of keepAlve is true.)    | boolean   | false  |\n| hiddenHeaderContent | (**Special**) It hides the breadcrumbs and page title bar in the [PageHeader](https://github.com/sendya/ant-design-pro-vue/blob/master/src/components/layout/PageHeader.vue#L14) component. | boolean      | false  |\n| permission          | Permissions that match the permission provided by the project.If it does not match, it will be forbidden to access the routing page. |   array     |    []     |\n\n> For custom `Icon`, please introduce custom `svg` Icon files, and passing to the `meta.icon` of route. \n\n> Please note, the page component that introduced by `component: () => import('..') ` is in Lazy-Loading-Mode. Please check [Lazy Loading Routes](https://router.vuejs.org/guide/advanced/lazy-loading.html) for details.\n\n> You should add new route into the '/' (index route) as a `children`.\n\n> Routes that do not require control or routes that need to be accessed without login, can be defined in the `constantRouterMap` of `/src/config/router.config.js`.\n\n> `permission` be customized in [src/store/modules/permission.js#L10](https://github.com/sendya/ant-design-pro-vue/blob/master/src/store/modules/permission.js#L10).\n\n### Appendix\n\n> If you want to request menu from server, you can check out [Authority management&Dynamic menu](/docs/authority-management)\n"}}]);