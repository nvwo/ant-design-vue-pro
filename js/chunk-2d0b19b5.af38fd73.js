(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0b19b5"],{2122:function(n,t){n.exports="# S-Table\n\n封装说明\n----\n\n>  基础的使用方式与 API 与 [官方版(Table)](https://vuecomponent.github.io/ant-design-vue/components/table-cn/) 本一致，在其基础上，封装了加载数据的方法。\n> 你无需在你是用表格的页面进行分页逻辑处理，仅需向 Table 组件传递绑定 `:data=\"Promise\"` 对象即可\n\n该 `table` 由 [@Saraka](https://github.com/saraka) 完成封装\n\n### 例子1\n\n基础使用：\n\n```vue\n<template>\n  <s-table\n    ref=\"table\"\n    size=\"default\"\n    :rowKey=\"(record) => record.data.id\"\n    :columns=\"columns\"\n    :data=\"loadData\"\n    :rowSelection=\"{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }\"\n  >\n  </s-table>\n</template>\n\n<script>\n  import { STable } from '@/components'\n\n  export default {\n    components: {\n      STable\n    },\n    data() {\n      return {\n        columns: [\n          {\n            title: '规则编号',\n            dataIndex: 'no'\n          },\n          {\n            title: '描述',\n            dataIndex: 'description'\n          },\n          {\n            title: '服务调用次数',\n            dataIndex: 'callNo',\n            sorter: true,\n            needTotal: true,\n            customRender: (text) => text + ' 次'\n          },\n          {\n            title: '状态',\n            dataIndex: 'status',\n            needTotal: true\n          },\n          {\n            title: '更新时间',\n            dataIndex: 'updatedAt',\n            sorter: true\n          }\n        ],\n        // 查询条件参数\n        queryParam: {},\n        // 加载数据方法 必须为 Promise 对象\n        loadData: parameter => {\n          return this.$http.get('/service', {\n            params: Object.assign(parameter, this.queryParam)\n          }).then(res => {\n            return res.result\n          })\n        },\n        selectedRowKeys: [],\n        selectedRows: []\n      }\n    },\n    methods: {\n      onSelectChange (selectedRowKeys, selectedRows) {\n         this.selectedRowKeys = selectedRowKeys\n         this.selectedRows = selectedRows\n       }\n    }\n  }\n<\/script>\n\n```\n\n### 例子2\n\n简单的表格，最后一列是各种操作：\n\n```vue\n<template>\n  <s-table\n    ref=\"table\"\n    size=\"default\"\n    :columns=\"columns\"\n    :data=\"loadData\"\n  >\n    <span slot=\"action\" slot-scope=\"text, record\">\n      <a>编辑</a>\n      <a-divider type=\"vertical\"/>\n      <a-dropdown>\n        <a class=\"ant-dropdown-link\">\n          更多 <a-icon type=\"down\"/>\n        </a>\n        <a-menu slot=\"overlay\">\n          <a-menu-item>\n            <a href=\"javascript:;\">1st menu item</a>\n          </a-menu-item>\n          <a-menu-item>\n            <a href=\"javascript:;\">2nd menu item</a>\n          </a-menu-item>\n          <a-menu-item>\n            <a href=\"javascript:;\">3rd menu item</a>\n          </a-menu-item>\n        </a-menu>\n      </a-dropdown>\n    </span>\n  </s-table>\n</template>\n\n<script>\n  import { STable } from '@/components'\n  import { getUsers } from '@/api/user'\n\n  export default {\n    components: {\n      STable\n    },\n    data() {\n      return {\n        columns: [\n          {\n            title: '规则编号',\n            dataIndex: 'no'\n          },\n          {\n            title: '描述',\n            dataIndex: 'description'\n          },\n          {\n            title: '服务调用次数',\n            dataIndex: 'callNo',\n          },\n          {\n            title: '状态',\n            dataIndex: 'status',\n          },\n          {\n            title: '更新时间',\n            dataIndex: 'updatedAt',\n          },\n          {\n            table: '操作',\n            dataIndex: 'action',\n            scopedSlots: {customRender: 'action'},\n          }\n        ],\n        // 查询条件参数\n        queryParam: {},\n        // 加载数据方法 必须为 Promise 对象\n        loadData: parameter => {\n          return getUsers(Object.assign(parameter, this.queryParam)).then(res => {\n            return res.result\n          })\n        },\n      }\n    },\n    methods: {\n      edit(row) {\n        // axios 发送数据到后端 修改数据成功后\n        // 调用 refresh() 重新加载列表数据\n        // 这里 setTimeout 模拟发起请求的网络延迟..\n        setTimeout(() => {\n          this.$refs.table.refresh() // refresh() 不传参默认值 false 不刷新到分页第一页\n        }, 1500)\n\n      }\n    }\n  }\n<\/script>\n```\n\n## 内置方法\n\n通过 `this.$refs.table` 调用\n- `this.$refs.table.refresh(true)` 刷新列表 (用户新增/修改数据后，重载列表数据)\n- `refresh()` 方法可以传一个 `bool` 值，当有传值 或值为 `true` 时，则刷新时会强制刷新到第一页（常用户页面 搜索 按钮进行搜索时，结果从第一页开始分页）\n- 注意：要调用 `refresh(bool)` 需要给表格组件设定 `ref` 值\n\n## 内置属性\n> 除去继承了 `a-table` 自带属性外，还而外提供了一些额外属性属性  \n\n| 属性           | 说明                                            | 类型              | 默认值 |\n| -------------- | ----------------------------------------------- | ----------------- | ------ |\n| alert          | 设置是否显示表格信息栏                          | [object, boolean] | null   |\n| showPagination | 显示分页选择器，可传 'auto' \\| boolean          | [string, boolean] | 'auto' |\n| data           | 加载数据方法 必须为 `Promise` 对象 **必须绑定** | Promise           | -      |\n\n`alert` 属性对象：\n\n```javascript\nalert: {\n  show: Boolean, \n  clear: [Function, Boolean]\n}\n```\n\n注意事项\n----\n\n> 你可能需要为了与后端提供的接口返回结果一致而去修改以下代码：\n(需要注意的是，这里的修改是全局性的，意味着整个项目所有使用该 table 组件都需要遵守这个返回结果定义的字段。)\n\n修改 `@/components/table/index.js`  第 139 行起\n\nhttps://github.com/sendya/ant-design-pro-vue/blob/dev/v2/src/components/Table/index.js#L139-L158\n\n\n```javascript\nresult.then(r => {\n  this.localPagination = Object.assign({}, this.localPagination, {\n    current: r.pageNo, // 返回结果中的当前分页数\n    total: r.totalCount, // 返回结果中的总记录数\n    showSizeChanger: this.showSizeChanger,\n    pageSize: (pagination && pagination.pageSize) ||\n      this.localPagination.pageSize\n  })\n  // 为防止删除数据后导致页面当前页面数据长度为 0 ,自动翻页到上一页\n  if (r.data.length === 0 && this.localPagination.current !== 1) {\n    this.localPagination.current--\n    this.loadData()\n    return\n  }\n\n  // 这里用于判断接口是否有返回 r.totalCount 或 this.showPagination = false\n  // 当情况满足时，表示数据不满足分页大小，关闭 table 分页功能\n\n  (!this.showPagination || !r.totalCount && this.showPagination === 'auto') && (this.localPagination = false)\n  this.localDataSource = r.data // 返回结果中的数组数据\n  this.localLoading = false\n})\n```\n### 返回 JSON 例子\n```json\n{\n  \"message\": \"\",\n  \"result\": {\n    \"data\": [{\n        id: 1,\n        cover: 'https://gw.alipayobjects.com/zos/rmsportal/WdGqmHpayyMjiEhcKoVE.png',\n        title: 'Alipay',\n        description: '那是一种内在的东西， 他们到达不了，也无法触及的',\n        status: 1,\n        updatedAt: '2018-07-26 00:00:00'\n      },\n      {\n        id: 2,\n        cover: 'https://gw.alipayobjects.com/zos/rmsportal/zOsKZmFRdUtvpqCImOVY.png',\n        title: 'Angular',\n        description: '希望是一个好东西，也许是最好的，好东西是不会消亡的',\n        status: 1,\n        updatedAt: '2018-07-26 00:00:00'\n      },\n      {\n        id: 3,\n        cover: 'https://gw.alipayobjects.com/zos/rmsportal/dURIMkkrRFpPgTuzkwnB.png',\n        title: 'Ant Design',\n        description: '城镇中有那么多的酒馆，她却偏偏走进了我的酒馆',\n        status: 1,\n        updatedAt: '2018-07-26 00:00:00'\n      },\n      {\n        id: 4,\n        cover: 'https://gw.alipayobjects.com/zos/rmsportal/sfjbOqnsXXJgNCjCzDBL.png',\n        title: 'Ant Design Pro',\n        description: '那时候我只会想自己想要什么，从不想自己拥有什么',\n        status: 1,\n        updatedAt: '2018-07-26 00:00:00'\n      },\n      {\n        id: 5,\n        cover: 'https://gw.alipayobjects.com/zos/rmsportal/siCrBXXhmvTQGWPNLBow.png',\n        title: 'Bootstrap',\n        description: '凛冬将至',\n        status: 1,\n        updatedAt: '2018-07-26 00:00:00'\n      },\n      {\n        id: 6,\n        cover: 'https://gw.alipayobjects.com/zos/rmsportal/ComBAopevLwENQdKWiIn.png',\n        title: 'Vue',\n        description: '生命就像一盒巧克力，结果往往出人意料',\n        status: 1,\n        updatedAt: '2018-07-26 00:00:00'\n      }\n    ],\n    \"pageSize\": 10,\n    \"pageNo\": 0,\n    \"totalPage\": 6,\n    \"totalCount\": 57\n  },\n  \"status\": 200,\n  \"timestamp\": 1534955098193\n}\n```\n\n\n\n更新时间\n----\n\n该文档最后更新于： 2019-03-21 AM 10:37\n"}}]);